<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2018-04-04T18:30:11+08:00</updated><id>http://localhost:4000/</id><title type="html">Leon Sun</title><subtitle>Blog and website of Leon Sun</subtitle><author><name>Leon Sun</name></author><entry><title type="html">Virtual Clock</title><link href="http://localhost:4000/virtual-clock/" rel="alternate" type="text/html" title="Virtual Clock" /><published>2018-03-30T00:00:00+08:00</published><updated>2018-03-30T00:00:00+08:00</updated><id>http://localhost:4000/virtual-clock</id><content type="html" xml:base="http://localhost:4000/virtual-clock/">&lt;h2 id=&quot;1-what-is-virtual-clock&quot;&gt;1. What is virtual clock&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Virtual Clock: 没有定义时钟源的时钟
Real Clock: 定义了时钟源的时钟。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;p&gt;Virtual clock与real clock的区别就在于是否有source，real clock有实实在在的source pin/port，沿着source可以trace到clock sink，可以对real clock做CTS；而virtual clock不行。&lt;br /&gt;
定义Real/Virtual clock cmd 如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;## real clock, with source pin/port
create_clock -name &quot;CLK&quot; -period 10 -waveform [0 5] [get_ports clk]
## virtual clock
create_clock -name &quot;VirCLK&quot; -period 10 -waveform [0 5]
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2-purpose-of-virtual-clock&quot;&gt;2. Purpose of Virtual Clock&lt;/h2&gt;
&lt;p&gt;简单地说，Virtual clock就是用来帮助我们约束IO的。一图胜千言，请看下面的示意图(ps:安利online画电路图网站&lt;a href=&quot;https://www.digikey.com/schemeit&quot;&gt;schemeit&lt;/a&gt;)：&lt;br /&gt;
&lt;img src=&quot;/img/2018-03-30-vir_clk_schematic.png&quot; alt=&quot;vir clk schematic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对于TOP，4个FF源于同一个clk，它们都是同步的，所以FF1-&amp;gt;FF2，FF3-&amp;gt;FF4这两条跨block的path都需要检查timing；而对于BLOCK，这两条path是看不见的，它只能看到A-&amp;gt;FF2 和 FF3-&amp;gt;B的path，即block内部看到的path比真实path要短。&lt;br /&gt;
这样就需要对input port A 设input delay约束，delay value为从FF1/CP到A的delay；对output port B 设output delay约束，delay value为从B到FF4/D的delay。&lt;br /&gt;
这样一来，data path上就能正确反映实际full path了，那么clock path呢？&lt;br /&gt;
对于FF1/CP–&amp;gt;FF2/D这条full path，在BLOCK内部，capture pin FF2/CP的latency可以通过clk source latency + clk network latency来得到，source latency是外部CLK source到BLOCK CLK port的delay，可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;set_clock_latency&lt;/code&gt;约束；network latency是从CLK port 到FF2/CP的latency，这部分就是CTS后clock tree的长度。&lt;br /&gt;
但是FF1/CP在BLOCK外部，无法获得其launch latency，如果不加约束，CTS后，由于launch和capture之间的skew，timing很难meet(in2reg hold，reg2out setup)。 &lt;br /&gt;
那么如何约束FF1/CP或者FF4/CP的clk latency呢？&lt;br /&gt;
&lt;strong&gt;这就是virtual clock的真正用意，定义virtual clk，然后通过反标virtual clk的source latency来约束FF1/CP或FF4/CP的clk latency。&lt;/strong&gt; &lt;br /&gt;
到这里我们就会发现，其实FF1/CP-&amp;gt;FF2/D这条同一个clk约束的full path，其实被分成了vir clk和clk两个同步clk的跨clock domain之间的约束了。&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="STA" /><summary type="html">1. What is virtual clock Virtual Clock: 没有定义时钟源的时钟 Real Clock: 定义了时钟源的时钟。</summary></entry><entry><title type="html">hierarchical verification</title><link href="http://localhost:4000/hierarchical-verification/" rel="alternate" type="text/html" title="hierarchical verification" /><published>2018-03-06T00:00:00+08:00</published><updated>2018-03-06T00:00:00+08:00</updated><id>http://localhost:4000/hierarchical-verification</id><content type="html" xml:base="http://localhost:4000/hierarchical-verification/">&lt;p&gt;IC设计中，到处都有&lt;code class=&quot;highlighter-rouge&quot;&gt;top-down&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;bottom-up&lt;/code&gt;的思想，在formal verification里也同样存在。Formality默认就是使用&lt;code class=&quot;highlighter-rouge&quot;&gt;top-down&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;bottom-up&lt;/code&gt;相结合的策略来做形式验证。&lt;!--more--&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;top-down verification&lt;/code&gt;其实就是flatten verification，把整个design打平，一个logic cone可以跨越多个hierarchy；这样的好处是可以减少logic cone数目，但是缺点也很明显，就是logic cone会比较大。 &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;bottom-up verification&lt;/code&gt;就是hierarchical verification，对design从最底层开始验证，底层验证pass后，将其设为black box，再对上层进行验证，依次进行，直至top design；可以看出来，hierarchical verification的logic cone都相对较小，因为即使是对上层deign验证时，下层design会被设为black box。 &lt;br /&gt;
简单情况下，Formality的默认行为已经能够很好的处理了。但是当碰到有些inconclusive verification，可能由于logic cone比较大导致，这时使用hierarchical verification可以帮助我们来减小logic cone，简化验证，就可能在较短的时间获得succeeded verification；对于fail verification，也可以通过hierarchical verification来定位到导致failing的root cause。&lt;/p&gt;

&lt;h2 id=&quot;1how-to-perform-hierarchical-verification&quot;&gt;1.How to perform hierarchical verification&lt;/h2&gt;
&lt;p&gt;其实很简单，只要定位到sub design就行。&lt;code class=&quot;highlighter-rouge&quot;&gt;set_top&lt;/code&gt;后top design是不能重复设定的，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;set_reference_design&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;set_implementation_design&lt;/code&gt;来分别指定要进行验证的sub design，类似于ICC/PT里的&lt;code class=&quot;highlighter-rouge&quot;&gt;current_design&lt;/code&gt;操作。然后依次&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;verify&lt;/code&gt;。&lt;br /&gt;
大致脚本如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;## read netlist/svf/upf..
set_top r:/WORK/TOP
set_top i:/OWRK/TOP
## to subdesign
set_reference_design r:/WORK/Rsubdeign
set_implementation_design i:/WORK/Isubdesign
match
verify
## back to top design
set_reference_design r:/WORK/TOP
set_implementation_design r:/WORK/TOP
#### set subdesign bbox if pass
set_black_box r:/WORK/Rsubdesign
set_black_box i:/WORK/Isubdesign
match
verify
...
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;其实实际项目中，由于设计很复杂，直接verify subdesign可能会fail。&lt;br /&gt;
比如，对于一个subdesign，它的某个output port可能floating，那么DC在优化过程可能会将这个pin相关的path优化掉，那么这个output port就会fail。&lt;br /&gt;
如下，这是个商为12bit的除法器，但是我只需要用后四位的，那么RTL里就不会用到高位的8bit，DC在优化时，就会留下floating的output port。由于它是用的div_pipe DesignWare，在reference里这些高位肯定是有逻辑连接的，那么比较时，就会引起fail。
&lt;img src=&quot;/img/2018-03-06_bbox_output_floating.png&quot; alt=&quot;subdeign floating output&quot; /&gt;
这种情况下，就需要把这些点设为dont verify point：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;set_dont_verify_points -type port  $ref/q[4]
set_dont_verify_points -type port  $ref/q[5]
set_dont_verify_points -type port  $ref/q[6]
...
set_dont_verify_points -type port  $impl/q[4]
set_dont_verify_points -type port  $impl/q[5]
set_dont_verify_points -type port  $impl/q[6]
...
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;另外，当低层design pass后，如果直接对其设black box，可能也不能保证高层design pass。比如一种常见的情况是，如果subdesign的某个output port由于其前面的约束，其值可能是定值，比如1；但是对于高层design，这个subdesign bbox的output pin要作为logic cone的input，不加额外设置的话，其可以是0/1/X，那么在为0时就会导致高层design fail。&lt;br /&gt;
这种情况下，verify higher design时，除了要对subdesign 设black box，还要对其output pin设&lt;code class=&quot;highlighter-rouge&quot;&gt;set_constant&lt;/code&gt;。&lt;br /&gt;
如今的设计都很复杂，如果都要人为地像上述那样来发现问题，再对design做额外设置，那是非常费时费力的。&lt;/p&gt;

&lt;h2 id=&quot;2recommended-hierarchical-verification&quot;&gt;2.Recommended hierarchical verification&lt;/h2&gt;
&lt;p&gt;Formality提供了一个非常有效的命令：&lt;code class=&quot;highlighter-rouge&quot;&gt;write_hierarchical_verification_script&lt;/code&gt;来帮我们做这些事情。这个cmd就是强制工具使用hierarchical verification，然后输出对应的脚本，这个过程中，FM会做match/preverify，对design做出&lt;code class=&quot;highlighter-rouge&quot;&gt;set_dont_verify_points&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;set_user_match&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;set_constant&lt;/code&gt;等额外约束。其output脚本结构如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;define var/proc&lt;/li&gt;
  &lt;li&gt;bottom design&lt;/li&gt;
  &lt;li&gt;higher design&lt;/li&gt;
  &lt;li&gt;top design&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当subdesign verification fail时，verify其higher design时，就不会将subdesign bbox，fail subdesign points 会在higher flatten verification。 &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;write_hierarchical_verification_script&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;-path&lt;/code&gt;option可以指定某个instance，这会很方便的帮我们来做某些subdesign的verification。但有时候，我们需要对上百个instance做hierarchical verification，你可以foreach循环上百次，或者对top design来write_hier，然后处理文本，抓出需要的instance。我确实碰到这种情况，也倾向于使用后者方法。这里贴上抓取多个sub instance的脚本：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;########################################&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# author: leon&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Date: 2018/01/22 10:44:01&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Version: 1.0&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# usage: get_sub_script.sh all_sub_script.tcl sub_list &amp;gt; sub.tcl&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;########################################&lt;/span&gt;

awk &lt;span class=&quot;s1&quot;&gt;'$0~/### Verifying instances/ {exit} {print}'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;sub &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cat &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;awk &lt;span class=&quot;s1&quot;&gt;'BEGIN {
			FS=&quot;\n&quot;;
			RS=&quot;\n\n&quot;
		}
		$3~/###   Ref:.*'&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sub&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'\// {print}
		$3~/###   Ref:.*'&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sub&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'$/ {print;exit}
	'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3one-more-thing&quot;&gt;3.One more thing&lt;/h2&gt;
&lt;p&gt;如果是对inconclusive design做hierarchical verification，有可能即使对最底层的subdesign也仍然是inconclusive；这时，可以利用save的subdesign session来做并行地跑alternate strategies，因为是最底层的subdesign，logic cone要小很多。&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;set_run_alternate_strategies_options&lt;/code&gt;的manpage有多种并行扔job的方法，但是没提到在当前local服务器的处理，其实很简单，如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;set verification_timeout_limit 0
set_run_alternate_strategies_options -max_cores 8 -num_processes 3 -protocol CUSTOM -submit_command &quot;sh&quot;
run_alternate_strategies -session sub_new/fm_subscript_1.tcl.1.fss -strategies &quot;s3 l1 s7&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4conclusion&quot;&gt;4.Conclusion&lt;/h2&gt;
&lt;p&gt;Hierarchical verification可以有效地简化design，减小logic cone，帮助我们发现问题的症结。&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="verification" /><category term="formality" /><summary type="html">IC设计中，到处都有top-down和bottom-up的思想，在formal verification里也同样存在。Formality默认就是使用top-down + bottom-up相结合的策略来做形式验证。</summary></entry><entry><title type="html">save library info into json</title><link href="http://localhost:4000/save-library-info-in-json/" rel="alternate" type="text/html" title="save library info into json" /><published>2017-12-10T00:00:00+08:00</published><updated>2017-12-10T00:00:00+08:00</updated><id>http://localhost:4000/save-library-info-in-json</id><content type="html" xml:base="http://localhost:4000/save-library-info-in-json/">&lt;p&gt;Library(.lib)里一种可读文本格式，它定义了这个逻辑库的特征和所包含的逻辑单元。如下图，它的内容格式必须满足一定的格式，上部分为库的基本特征，包括lib name,operating condition,voltage map,wire load model,timing/power/niose template definitions等; 下部分为该库所包含的所有cell,包括cell的function/timing/power/noise等详细信息。&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2017-12-10-logic-lib-structrue.png&quot; alt=&quot;Fig1. sturcture of a logic library&quot; title=&quot;Fig1. sturcture of a logic library&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Library很重要，前后端都要用到，Synopsys为了提高它家tool处理lib的速度，会将.lib转成二进制的.db文件，DC/ICC/PT都是读.db。&lt;/p&gt;

&lt;h2 id=&quot;1我为何要处理这些lib文件&quot;&gt;1.我为何要处理这些.lib文件?&lt;/h2&gt;

&lt;p&gt;我们知道，一个项目中，可能会用到数千个.lib文件，stdcell有不同的track number,channel width/pitch,这些不同的特征cell不能在PR里弄混，比如正常情况下7 track的core里不能放进去9 track和12 track的cell(multi track情况除外);包括memory/ip/io在内的所有的cell的timing都与operation condition有关，同一个signoff corner下，不能混用到不同operation condition的cell。&lt;/p&gt;

&lt;p&gt;一般情况下，foundary提供的stdcell lib的命名比较规范，从lib name就可以看出track number/operaction condition等许多lib信息。但是memory/IP/IO等lib常常是第三方提供的，命名五花八门，常常需要打开.lib来寻找信息。&lt;/p&gt;

&lt;p&gt;因此，我就打算将这些.lib信息全部抽取出来单独保存到json，以后需要查看库基本信息时，只要看该json文件。&lt;br /&gt;
除此以外，我还加入filter json功能，来处理简单的filter操作，比如找出不同operation condition的.lib，这个在后面会提到。&lt;/p&gt;

&lt;h2 id=&quot;2为何用json&quot;&gt;2.为何用json?&lt;/h2&gt;

&lt;p&gt;首先要介绍一下json：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。 易于人阅读和编写。同时也易于机器解析和生成。 它基于JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。 这些特性使JSON成为理想的数据交换语言&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JSON虽然源于JavaScript，但是因为它简单易读的数据格式，已被广泛应用，多种语言都有库支持json的解析和生成。更多信息可以参考&lt;a href=&quot;https://www.json.org/&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;每个.lib对应一个object，所以.lib存到一个list里，可以很简单的写到json里，读起来非常方便。&lt;/p&gt;

&lt;h2 id=&quot;3为何用java&quot;&gt;3.为何用java?&lt;/h2&gt;

&lt;p&gt;这个主要是出于stdcell方面的考虑，因为为了得到stdcell的track number,channel width/pitch，vt info等需要解析其库名，但是各个foundary或者第三方提供的命名规则完全不一样，例如TSMC的命名如tcbn28hpcplusbwp7t35p140ssg0p81v0p9vm40c_ccs，而ARM的命名如sc9mc_cln28hpm_base_svt_c38_tt_typical_max_0p81v_0c，所以无法统一的处理。&lt;/p&gt;

&lt;p&gt;所以为了方便扩展，给这个stdcell信息定义一个interface，不同的foundary parser都来实现这个interface，可以很好的解决问题。遇到新的命名规则，只需要新写个类来实现interface。&lt;/p&gt;

&lt;p&gt;整个package class structure比较简单，大致如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2017-12-10-package-hier-diagram.png&quot; alt=&quot;Fig2. class structure&quot; title=&quot;Fig2. class structure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;目前，vender只扩展了TSMC和ARM，以后会继续扩展。&lt;/p&gt;

&lt;p&gt;由于库里的operation condition命名规则不同会导致混乱，我将其拿出单独一个object Opc，其opc_name field是按照我定的规则得到的新name，我称其为归一化后的opc name，它和.lib里的default opc name可能会不同。&lt;/p&gt;

&lt;p&gt;JSON的序列化和反序列化使用的是Gson,这是google的json库,详情参考&lt;a href=&quot;https://sites.google.com/site/gson/gson-user-guide&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Filter类是用来过滤一些expression，目前支持&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;=~&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;!~&lt;/code&gt;操作，匹配是需用正则表达式，而不是简单的glob。另外，加入了对多个表达式通过&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;的支持，实例会在后面给出。&lt;/p&gt;

&lt;p&gt;Util类为工具类，里面包括一些public static的method。&lt;/p&gt;

&lt;h2 id=&quot;3使用&quot;&gt;3.使用&lt;/h2&gt;

&lt;p&gt;我生成了runable jar包，使用时直接使用该jar包。只要有两个方式，toJson和FilterJson，如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;$java -jar ~/Liberty/Lib.jar -help
usage:
toJson:
java -jar Lib.jar -libs libsListFile [-output outputFile]
filterJson:
java -jar Lib.jar -json jsonFile -filter filterExpression -outputAttr AttrName -outputFile outputFile
Please refer README for more info
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;31-save-info-to-json&quot;&gt;3.1 save info to json&lt;/h3&gt;

&lt;p&gt;toJson时，需要提供所有待解析的.lib文件，放在一个文本里，格式如下：&lt;br /&gt;
	&lt;code class=&quot;highlighter-rouge&quot;&gt;lib_file_path &amp;lt;vender_if_stdcell&amp;gt;&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;vender_if_stdcell&amp;gt;&lt;/code&gt;用来解析stdcell相关的信息。&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;-outputFile outputFile&lt;/code&gt;为optional，不指定情况下，默认保存到当前目录的libs.json。&lt;/p&gt;

&lt;p&gt;实例如下：&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$cat&lt;/span&gt; libs.list
...some_path.../tcbn28hpcplusbwp7t30p140hvt/lib_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0c_ccs.lib TSMC
...some_path.../tcbn28hpcplusbwp7t30p140hvt/lib_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v0c_ccs.lib TSMC
...some_path.../tcbn28hpcplusbwp7t30p140hvt/lib_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v125c_ccs.lib TSMC
...some_path.../lib_nldm/USB_AFE_BC.lib
...some_path.../lib_nldm/USB_AFE_LT.lib
...some_path.../lib_nldm/USB_AFE_ML.lib
...some_path.../lib_nldm/USB_AFE_TC.lib
...some_path.../lib_nldm/USB_AFE_WC.lib
...some_path.../lib_nldm/USB_AFE_WCL.lib

&lt;span class=&quot;nv&quot;&gt;$java&lt;/span&gt; -jar ~/Liberty/Lib.jar -libs libs.list -output libs.json
Total 4372 libs are parsed.

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;我处理了4000+个libs，用时2mins左右，生成的json如下：&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0c_ccs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0c_ccs.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0c_ccs.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ux/V37_ES2/user/sipaas/01_library/0_STD/tcbn28hpcplusbwp7t30p140hvt/lib_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0c_ccs.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ux/V37_ES2/user/sipaas/01_library/0_STD/tcbn28hpcplusbwp7t30p140hvt/db_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0c_ccs.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;orignal_opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg0p88v0c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;voltage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.88&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;temperture&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg_0.88_0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;v_map&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREVDD1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.88&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREGND1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;node&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;28hpcplus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;track&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;channel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;30&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;vt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hvt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;vender&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSMC&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v0c_ccs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v0c_ccs.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v0c_ccs.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ux/V37_ES2/user/sipaas/01_library/0_STD/tcbn28hpcplusbwp7t30p140hvt/lib_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v0c_ccs.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ux/V37_ES2/user/sipaas/01_library/0_STD/tcbn28hpcplusbwp7t30p140hvt/db_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v0c_ccs.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;orignal_opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg0p88v0p88v0c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;voltage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.88&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;temperture&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg_0.88_0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;v_map&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREVDD2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.88&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREVDD1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.88&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREGND1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;node&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;28hpcplus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;track&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;channel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;30&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;vt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hvt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;vender&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSMC&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v125c_ccs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v125c_ccs.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v125c_ccs.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ux/V37_ES2/user/sipaas/01_library/0_STD/tcbn28hpcplusbwp7t30p140hvt/lib_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v125c_ccs.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ux/V37_ES2/user/sipaas/01_library/0_STD/tcbn28hpcplusbwp7t30p140hvt/db_ccs/tcbn28hpcplusbwp7t30p140hvtffg0p88v0p88v125c_ccs.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;orignal_opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg0p88v0p88v125c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;voltage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.88&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;temperture&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ffg_0.88_125&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;v_map&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREVDD2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.88&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREVDD1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.88&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;COREGND1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;node&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;28hpcplus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;track&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;channel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;30&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;vt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hvt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;vender&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TSMC&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...省略...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_TC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_TC.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_TC.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...somepath.../USB_AFE_LAI053/lib_nldm/USB_AFE_LAI053_TC.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...somepath.../USB_AFE_LAI053/db_nldm/USB_AFE_LAI053_TC.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;orignal_opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tt_0.90_25.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;voltage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;temperture&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tt_0.9_25&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;v_map&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVDD18&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;DVDD09&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;DVSS09&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVDD3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVSS3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_WC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_WC.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_WC.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...somepath.../USB_AFE_LAI053/lib_nldm/USB_AFE_LAI053_WC.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...somepath.../USB_AFE_LAI053/db_nldm/USB_AFE_LAI053_WC.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;orignal_opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ss_0.81_125.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;voltage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.81&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;temperture&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ss_0.81_125&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;v_map&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVDD18&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.62&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;DVDD09&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.81&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;DVSS09&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVDD3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVSS3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_WCL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_WCL.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USB_AFE_LAI053_WCL.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...somepath.../USB_AFE_LAI053/lib_nldm/USB_AFE_LAI053_WCL.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dbpath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...somepath.../USB_AFE_LAI053/db_nldm/USB_AFE_LAI053_WCL.db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;orignal_opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ss_0.81_M40.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;voltage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.81&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;temperture&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;opc_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ss_0.81_-40&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;v_map&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVDD18&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.62&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;DVDD09&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.81&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;DVSS09&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVDD3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;AVSS3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;32-filterjson&quot;&gt;3.2 filterJson&lt;/h3&gt;

&lt;p&gt;得到json之后，我们对它处理，得到我们需要的信息，用法如下：&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar Lib.jar -json jsonFile -filter filterExpression -outputAttr AttrName -outputFile outputFile&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;-filter&lt;/code&gt;后是filter expression，为String，所以如果是多个条件过滤的话，要加上引号。&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;-outputAttr&lt;/code&gt;指的是需要输出的lib attribute，比如我们需要ss_0.81_-40下的所有link lib，我们只要dbfile attribute，其它我们并不需要。 &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;-outputFile&lt;/code&gt;是将输出重定向到你指定的file。&lt;/p&gt;

&lt;p&gt;实例如下：&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;##比如，我们需要ICC里ss_0.81_-40 corner下的link library&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##这里用了multi filter，来过滤到lowpower stdcell(假设design为非low power dsign,不需要这些库).&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;java -jar ~/Liberty/Lib.jar -json libs.json -filter &lt;span class=&quot;s2&quot;&gt;&quot;opc_name=~ss.*_0.81_-40 &amp;amp;&amp;amp; libfile!~.*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;v.*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;v.*&quot;&lt;/span&gt; -outputAttr dbfile -outputFile sslt.list
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat sslt.list
tcbn28hpcplusbwp7t30p140hvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t30p140ssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t30p140mbssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t30p140opphvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t30p140oppssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t35p140hvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t35p140ssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t35p140mbhvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t35p140mbssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t35p140opphvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t35p140oppssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t40p140hvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t40p140ssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t40p140mbhvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t40p140mbssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t40p140opphvtssg0p81vm40c_ccs.db 
tcbn28hpcplusbwp7t40p140oppssg0p81vm40c_ccs.db 
AADCSMUD64X20_ssg0p81vm40c.db 
ADDXSMUD32X27_ssg0p81vm40c.db 
ADDXSMUD512X24_ssg0p81vm40c.db 
ADDXSMUD64X19_ssg0p81vm40c.db 
AUD2PRF80X64WE_ssg0p81vm40c.db 
...省略...
SAR_ADC_LAI053_wcl_pg.db 
SENSOR_RX_LAI053_WCL.db 
USB_AFE_LAI053_WCL.db 

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;可以看到，不同的命名规则的lib都可以被抓出来。下面我们只要在ICC里利用简单的proc将output file读进去。&lt;/p&gt;

&lt;h3 id=&quot;33-tcl-proc&quot;&gt;3.3 Tcl proc&lt;/h3&gt;

&lt;p&gt;这里附上我的proc，将文本读进tcl，存在List里。这里我会过滤掉空白行和以&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;开始的注释行：这主要是以防万一，需要人为额外添加内容时，可以加入注释便于阅读。&lt;/p&gt;
&lt;div class=&quot;language-tcl highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;##其实很简单，大家肯定都会&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;proc&lt;/span&gt; file2list &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;file_name&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	set list_tmp &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
	set openfile &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;_name&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	while &lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;gets&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$openfile&lt;/span&gt; content&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &amp;gt;=0&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		if &lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;regexp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;^ *#&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; || &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;regexp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;^ *$&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		lappend list_tmp &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	close &lt;span class=&quot;nv&quot;&gt;$openfile&lt;/span&gt;
	return &lt;span class=&quot;nv&quot;&gt;$list&lt;/span&gt;_tmp
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4结语&quot;&gt;4.结语&lt;/h2&gt;
&lt;p&gt;这样我们就可以实现对lib文本的处理，jar包以后会根据需求扩展。
源码在&lt;a href=&quot;https://github.com/iLeonSun/Liberty&quot;&gt;github&lt;/a&gt;了。&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="java" /><summary type="html">Library(.lib)里一种可读文本格式，它定义了这个逻辑库的特征和所包含的逻辑单元。如下图，它的内容格式必须满足一定的格式，上部分为库的基本特征，包括lib name,operating condition,voltage map,wire load model,timing/power/niose template definitions等; 下部分为该库所包含的所有cell,包括cell的function/timing/power/noise等详细信息。</summary></entry><entry><title type="html">Debug PrimeTime Crash Issue In A Restored Session</title><link href="http://localhost:4000/debug-PrimeTime-crash/" rel="alternate" type="text/html" title="Debug PrimeTime Crash Issue In A Restored Session" /><published>2017-11-22T00:00:00+08:00</published><updated>2017-11-22T00:00:00+08:00</updated><id>http://localhost:4000/debug-PrimeTime-crash</id><content type="html" xml:base="http://localhost:4000/debug-PrimeTime-crash/">&lt;p&gt;之前一直用的是2015版本的PrimeTime，最近项目中有path margin约束，需要更新到2016.12sp1版本的PrimeTime。使用该版本时，由于软件feature变化，一直碰到crash的问题，最近才终于发现根源。   &lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-issue&quot;&gt;1. Issue&lt;/h2&gt;
&lt;p&gt;STA刚开始时，我习惯的做法是先DMSA flow来跑一下全部signoff secnario，save_session来保存（由于license/mem/cpu等限制，可能要分多次跑DMSA），然后选出timing最差的某些corner来fix。&lt;br /&gt;
这次，更新到新版本后，restore session后&lt;code class=&quot;highlighter-rouge&quot;&gt;update_timing&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;fix_eco_timing&lt;/code&gt;等cmd经常会导致session crash。&lt;br /&gt;
而且，crash前不会有warning/error等提示，直接是一堆stack trace。&lt;/p&gt;

&lt;h2 id=&quot;2debug&quot;&gt;2.Debug&lt;/h2&gt;
&lt;p&gt;首先，我对通过多次single-scenario run来得到多个session; restore这些session后，无论是&lt;code class=&quot;highlighter-rouge&quot;&gt;update_timing&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;fix_eco_timing&lt;/code&gt;或者其他cmd都没有引起session crash。&lt;br /&gt;
&lt;strong&gt;这就说明，引起crash的不是database，而是DMSA。&lt;/strong&gt;&lt;br /&gt;
然后，&lt;strong&gt;新建了一个工作目录&lt;/strong&gt;，多次DMSA跑multi-scenarios; restore这些session，发现只有第一次的那些session可以正常，其余session还是会crash。&lt;br /&gt;
就是说，比如第一次DMSA跑了:s1,s2,s3;第二次跑了：s4,s5,s6; 第三次跑了：s7,s8,s9。仅s1/s2/s3可以restore正常工作，没有crash。&lt;br /&gt;
于是，我再次DMSA跑了:s1,s2,s3，为了和第一次区分，就叫他们为：s1_2,s2_2,s3_2。但是s1_2/s2_2/s3_2 restore后也会crash。&lt;br /&gt;
虽然s1/s1_1的cmd/constraint等完全一致，但是s1不会crash，s1_1会crash。&lt;br /&gt;
接下来，就要比较s1和s1_1这两个session到底有什么差异了。&lt;br /&gt;
PT保存的session不可读，但是lib_mapping/readme是可读的。&lt;br /&gt;
比较了这两个file，并未发现有什么不同。&lt;br /&gt;
就在我以为此路不通时，忽然发现session里有两个link file。而且不同session的file都link到同样的file。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;##隐path，仅示意
mod29 -&amp;gt; /foo/bar/DMSA_work/common_data/a/mod29
nmp29 -&amp;gt; /foo/bar/DMSA_work/common_data/a/nmp29
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;save_session&lt;/code&gt;时为了节约硬盘空间，不同session之间可以共用信息，这部分就是存在common_data下。&lt;br /&gt;
那么问题就可以定位到DMSA common data上。&lt;br /&gt;
为何不是同一次DMSA的session会共用同样的data？&lt;br /&gt;
查看了旧版本的common data，每次DMSA的命名是不一样的。所以这应该就是root cause。&lt;/p&gt;

&lt;h2 id=&quot;3fix&quot;&gt;3.Fix&lt;/h2&gt;
&lt;p&gt;老版本的PT在save_session时，common data是这样的：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;% ls -rt
a  f  k  p  u  z   ae  aj  ao  at  ay   aad  aaq  aaf  aak  aax   aaac  aaah  aaam  aaar  aaaw   aaaab  aaaag  aaaal  aaaaq  aaaav  aaaaaa  aaaaaf  aaaaak
b  g  l  q  v  aa  af  ak  ap  au  az   aam  aar  aag  aal  aay   aaad  aaai  aaan  aaas  aaax   aaaac  aaaah  aaaam  aaaar  aaaaw  aaaaab  aaaaag  tracking_file
c  h  m  r  w  ab  ag  al  aq  av  aaa  aan  aas  aah  aau  aaz   aaae  aaaj  aaao  aaat  aaay   aaaad  aaaai  aaaan  aaaas  aaaax  aaaaac  aaaaah
d  i  n  s  x  ac  ah  am  ar  aw  aab  aao  aat  aai  aav  aaaa  aaaf  aaak  aaap  aaau  aaaz   aaaae  aaaaj  aaaao  aaaat  aaaay  aaaaad  aaaaai
e  j  o  t  y  ad  ai  an  as  ax  aac  aap  aae  aaj  aaw  aaab  aaag  aaal  aaaq  aaav  aaaaa  aaaaf  aaaak  aaaap  aaaau  aaaaz  aaaaae  aaaaaj
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;DMSA save_session时，common data下会从a到z开始命名，用完了就用aa-az，aaa-aaz，aaaa-aaaz以此类推。&lt;br /&gt;
就是说，每次DMSA在save session时会查看下common data目录，如果已经有data了，就会用新的名字来保存，以保证不覆盖已存的data。&lt;br /&gt;
但是2016版本的PT，在save seesion时，并不会用新名字来保存common data，而且，也不会覆盖已存在的data。或者该说，它发现已经有存在的data，它就不会重新保存，所以common data下仅会保存着第一次产生的data…… &lt;br /&gt;
所以，只有第一次保存的session可以正常restore。&lt;br /&gt;
那么，work around可以是每次把common data保存到不同的目录下。common data dir是怎么决定的呢？&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;save_session&lt;/code&gt;的manpage里有解释：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;When save_session is called in a distributed multi-scenario analysis (DMSA) run, certain data, such as parasitic and physical DB information, are stored in a common data directory named common_data. 
The images saved by each scenario contain softlinks to the data in this common data directory to avoid a duplication of storage of the data that scenarios share in common. 
When save_session is issued directly to the master session, the common data directory is created in the specified image directory. 
When save_session is issued to the slaves via remote_execute, the location of the common data directory is based on whether the image directory specified to the command is relative or absolute:

For absolute paths, the common data is located in the parent directory of the specified directory. All scenario images should share the same parent directory to maximise sharing.

For relative paths, the common data directory is located directly under the multi-scenario working directory.

To execute a multi_scenario save_session with common data sharing disabled, use the -disable_common_data_sharing option.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;所以，&lt;code class=&quot;highlighter-rouge&quot;&gt;save_session&lt;/code&gt;时指定绝对路径就可以把common data保存到session的上一级目录，而不是master working dir，这样就不会有多次DMSA的common data冲突的情况。&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="STA" /><category term="PT" /><summary type="html">之前一直用的是2015版本的PrimeTime，最近项目中有path margin约束，需要更新到2016.12sp1版本的PrimeTime。使用该版本时，由于软件feature变化，一直碰到crash的问题，最近才终于发现根源。</summary></entry><entry><title type="html">understanding ITF</title><link href="http://localhost:4000/understanding-itf/" rel="alternate" type="text/html" title="understanding ITF" /><published>2017-11-08T00:00:00+08:00</published><updated>2017-11-08T00:00:00+08:00</updated><id>http://localhost:4000/understanding-itf</id><content type="html" xml:base="http://localhost:4000/understanding-itf/">&lt;p&gt;后端设计中，我们需要知道每条net的RC值来计算timing，RC由process直接决定，不同的导体/绝缘体材料、金属宽度/厚度/间距、制造过程中的光刻/刻蚀/抛光等引起的工艺偏差、工作温度等因素都会导致RC变化。&lt;br /&gt;
Foundary会考虑制造过程中的种种因素，建立RC模型，来提供给后端；后端根据此模型，抽取计算得到整条net的RC，继而得出net timing。 &lt;br /&gt;
Foundary提供的process RC有三种格式：itf，TLU+，nxtgrd；三者可以通过Starrc相互转换。&lt;!--more--&gt;&lt;/p&gt;
&lt;blockquote&gt;

  &lt;p&gt;ITF: Interconnect Technology Format &lt;br /&gt;
TLU+: TLU 升级版，synopsys工具用到，根据net width/spacing查表得到cap &lt;br /&gt;
NXTGRD: New Xtraction Generic Regression Database&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;1itf-structure&quot;&gt;1.ITF structure&lt;/h2&gt;
&lt;p&gt;三种格式中，itf file是可读的，我们下面就看一下它的内容。 &lt;br /&gt;
ITF是按芯片的横截面来描述的，从最上层的绝缘层开始，逐层向下描述。ITF文件结构如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;TECHNOLOGY = process_name
REFERENCE_DIRECTION = VERTICAL | HORIZONTAL | GATE
[GLOBAL_TEMPERATURE = temp_value]
[BACKGROUND_ER = value]
[HALF_NODE_SCALE_FACTOR = scale_factor]
[USE_SI_DENSITY = YES | NO ]
[DROP_FACTOR_LATERAL_SPACING = value]

DIELECTRIC top_dielectric_name {…}
CONDUCTOR top_conductor_name {…}
[…]
[DIELECTRIC bottom_dielectric_name{…}]

VIA top_via_name {…}
[…]
VIA bottom_via_name {…}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;文件最上方为process technology的整体描述，接着是DIELECTRIC/CONDUCTOR的逐层描述，最后是VIA部分。&lt;/p&gt;

&lt;h2 id=&quot;2example-of-tsmc28hpc-itf&quot;&gt;2.Example of TSMC28HPC+ ITF&lt;/h2&gt;
&lt;p&gt;下面结合以TSMC的ITF中的M8为例，来详细解析一下。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;$$ 省略文件头和AP,M8比较有代表性。
$$ PS:itf中用$注释
DIELECTRIC PASS2 	 {THICKNESS=0.668210	ER=4.2 } 
DIELECTRIC PASS1 	 {THICKNESS=0.071590	ER=7.1 } 
DIELECTRIC IMD8c 	 {THICKNESS=0.778950	ER=4.2 } 
DIELECTRIC IMD8b 	 {THICKNESS=0.051500	ER=7.1 } 
DIELECTRIC IMD8a_A 	 {THICKNESS=0.055000	ER=4.2 } 
$$ 上面5行说明AP/M8之间有5层绝缘层，THICKNESS为该层厚度，ER为该层相对介电常数ε。
$$ 介电常数ε也被称为电容率，理想金属导体的ε应该是正无穷。
$$ 金属导线的cap值就是和这些绝缘层的ε有关。
CONDUCTOR M8 {THICKNESS= 0.885450
    CRT1=3.890e-03 CRT2=-1.500e-07 
	$$ 这两个值用来计算temperature variation时的电阻， temperature-dependent resistance 为T的二次多项式，如下：
	$$ R= CRT2*(T-T0)^2 + CRT1*(T-T0) + R0
    SIDE_TANGENT = 0.046869 
	$$ 理想情况下，金属层的截面应该是规则矩形，但是沉积过程引起的偏差，可能会导致截面为梯形（上宽下窄或上窄下宽）
	$$ SIDE_TANGENT指的就是截面斜边偏移角度的正切值(tanΘ)；正值表示上宽下窄，负值表示上窄下宽
	$$ 这里，我们可以计算得出M8截面是个底角2.68°的上宽下窄的梯形。
    POLYNOMIAL_BASED_THICKNESS_VARIATION {
	$$ 这部分描述的是工艺过程中M8后端偏差，该值是基于density和width的多项式
         DENSITY_POLYNOMIAL_ORDERS  { 4, 3, 2, 1, 0 }
		 $$ 多项式中density的指数
         WIDTH_POLYNOMIAL_ORDERS  { 4, 3, 2, 1, 0 }
		 $$ 多项式中width的指数
         WIDTH_RANGES {0.9 10.8000}
		 $$ width分布，这里有两个值，所以下面的多项式系数有三组，分别对应width&amp;lt;=0.9, 0.9&amp;lt;width&amp;lt;10.8, width&amp;gt;10.8的情况
         POLYNOMIAL_COEFFICIENTS  {
             0    -2.09675E+01    4.71013E+01    -3.63903E+01    1.10754E+01  
             0    2.24127E+01    -5.02114E+01    3.88210E+01    -1.28144E+01  
             0    -7.76371E+00    1.73158E+01    -1.32161E+01    5.02100E+00  
             0    9.83830E-01    -2.18583E+00    1.54960E+00    -8.13606E-01  
             0    -3.44482E-02    7.69210E-02    -3.26943E-02    5.70675E-02  
         }
         $$ 多项式的系数，因为上面density/width指数都有5种，所以多项式有5*5=25项，表格分别为每项的指数，具体为：
         $$ delta_thickness = 
         $$     0 * D^4W^4  +  -2.09675E+01 * D^3W^4 +  4.71013E+01 * D^2W^4  +  -3.63903E+01 * D^1W^4 +  1.10754E+01 * D^0W^4 
         $$     0 * D^4W^3  +  2.24127E+01  * D^3W^3 + -5.02114E+01 * D^2W^3  +  3.88210E+01  * D^1W^3 + -1.28144E+01 * D^0W^3 
         $$     0 * D^4W^2  +  -7.76371E+00 * D^3W^2 +  1.73158E+01 * D^2W^2  +  -1.32161E+01 * D^1W^2 +  5.02100E+00 * D^0W^2 
         $$     0 * D^4W^1  +  9.83830E-01  * D^3W^1 + -2.18583E+00 * D^2W^1  +  1.54960E+00  * D^1W^1 + -8.13606E-01 * D^0W^1 
         $$     0 * D^4W^0  +  -3.44482E-02 * D^3W^0 +  7.69210E-02 * D^2W^0  +  -3.26943E-02 * D^1W^0 +  5.70675E-02 * D^0W^0 
		  
         POLYNOMIAL_COEFFICIENTS  {
             8.60236E-04    -2.58636E-02    1.86404E-01    -6.33564E-01    1.60353E+00  
             -2.01704E-03    6.46872E-02    -4.28490E-01    1.02433E+00    -3.01753E+00  
             1.99839E-03    -6.92845E-02    4.59826E-01    -7.29301E-01    2.14093E+00  
             -9.64384E-04    3.62202E-02    -2.60733E-01    3.44576E-01    -7.69564E-01  
             1.81498E-04    -7.35529E-03    5.84458E-02    -7.00805E-02    1.21186E-01  
         }
         POLYNOMIAL_COEFFICIENTS  {
             0    0    0    0    0  
             0    0    0    0    0  
             0    0    0    0    0  
             0    0    0    0    0  
             0    0    0    0    0.060929
         }
    }
    RHO_VS_SI_WIDTH_AND_THICKNESS {
	$$ 这部分表示体电阻率(bulk resistivity)，该值是基于width和thickness查表得到
         WIDTH   { 0.3240 0.3600 0.3960 0.4320 0.4680 0.5400 0.7200 1.0800 1.3500 1.8000 2.7000 3.6000 4.5000 5.4000 6.7500 8.1000 9.0000 10.8000 }
         THICKNESS   { 0.5950 0.6800 0.7650 0.8500 0.9350 1.0200 1.1050 1.1900 1.2750 }
         VALUES  { 
 0.0206 0.0204 0.0202 0.0201 0.0200 0.0198 0.0196 0.0193 0.0192 0.0191 0.0190 0.0189 0.0189 0.0189 0.0189 0.0189 0.0189 0.0189
 0.0205 0.0203 0.0202 0.0201 0.0200 0.0198 0.0195 0.0192 0.0191 0.0190 0.0189 0.0188 0.0188 0.0188 0.0188 0.0188 0.0188 0.0188
 0.0205 0.0203 0.0201 0.0200 0.0199 0.0197 0.0195 0.0192 0.0191 0.0189 0.0188 0.0188 0.0188 0.0187 0.0187 0.0187 0.0187 0.0187
 0.0204 0.0202 0.0201 0.0200 0.0199 0.0197 0.0194 0.0191 0.0190 0.0189 0.0188 0.0187 0.0187 0.0187 0.0187 0.0187 0.0187 0.0186
 0.0204 0.0202 0.0201 0.0199 0.0198 0.0197 0.0194 0.0191 0.0190 0.0189 0.0187 0.0187 0.0187 0.0186 0.0186 0.0186 0.0186 0.0186
 0.0204 0.0202 0.0200 0.0199 0.0198 0.0196 0.0194 0.0191 0.0189 0.0188 0.0187 0.0187 0.0186 0.0186 0.0186 0.0186 0.0186 0.0186
 0.0204 0.0202 0.0200 0.0199 0.0198 0.0196 0.0193 0.0190 0.0189 0.0188 0.0187 0.0186 0.0186 0.0186 0.0185 0.0185 0.0185 0.0185
 0.0203 0.0202 0.0200 0.0199 0.0198 0.0196 0.0193 0.0190 0.0189 0.0188 0.0187 0.0186 0.0186 0.0185 0.0185 0.0185 0.0185 0.0185
 0.0203 0.0201 0.0200 0.0199 0.0198 0.0196 0.0193 0.0190 0.0189 0.0188 0.0186 0.0186 0.0185 0.0185 0.0185 0.0185 0.0185 0.0185
           }
       }
    ETCH_VS_WIDTH_AND_SPACING  {
	$$ 这部分表示刻蚀宽度偏差。理想情况下，刻蚀的宽度就是mask留的宽度，但实际制造中，光刻和刻蚀会受到线宽和间距影响而引起偏差
	$$ 因此，实际的线宽应该是理想线宽减去两倍的刻蚀偏差，real_width=origin-2*etch_value
	$$ etch_value为正值时，说明线宽变窄，shrink; etch_value为负值时，说明线宽变宽，expansion
	$$ 实际线上电阻应该基于考虑etch后的真实线宽
	$$ etch_value通过spacing和width查表得到
         SPACINGS { 0.3600 0.5400 0.7200 0.9000 1.0800 1.3500 1.8000 2.2500 2.7000 3.1500 3.6000 4.0500 4.5000 4.9500 5.4000 }
         WIDTHS   { 0.3600 0.5400 0.7200 0.9000 1.0800 1.3500 1.8000 2.7000 3.6000 4.5000 5.4000 6.7500 8.1000 9.0000 10.8000 }
         VALUES  { 
 -0.023150 -0.022300 -0.021450 -0.020650 -0.019800 -0.018950 -0.018100 -0.017300 -0.016450 -0.015600 -0.014800 -0.013950 -0.013100 -0.012250 -0.011450
 -0.014300 -0.013100 -0.011900 -0.010700 -0.009500 -0.008350 -0.007150 -0.006000 -0.004800 -0.003600 -0.002450 -0.001200 -0.000050 0.001150 0.002300
 -0.001000 0.000250 0.001500 0.002750 0.004050 0.005300 0.006550 0.007800 0.009100 0.010350 0.011600 0.012900 0.014150 0.015400 0.016650
 0.008950 0.010350 0.011700 0.013100 0.014550 0.015900 0.017300 0.018700 0.020100 0.021500 0.022900 0.024250 0.025650 0.027050 0.028450
 -0.005550 -0.004300 -0.003050 -0.001800 -0.000500 0.000750 0.002000 0.003250 0.004500 0.005750 0.007000 0.008250 0.009550 0.010750 0.012050
 -0.001700 -0.000150 0.001450 0.002950 0.004500 0.006100 0.007650 0.009250 0.010800 0.012350 0.013900 0.015450 0.017000 0.018550 0.020150
 -0.035000 -0.032850 -0.030650 -0.028500 -0.026350 -0.024200 -0.022050 -0.019900 -0.017700 -0.015550 -0.013400 -0.011250 -0.009050 -0.006900 -0.004750
 -0.039750 -0.036550 -0.033350 -0.030150 -0.026950 -0.023700 -0.020500 -0.017300 -0.014050 -0.010850 -0.007650 -0.004400 -0.001200 0.002000 0.005200
 -0.032350 -0.028100 -0.023850 -0.019600 -0.015400 -0.011150 -0.006900 -0.002650 0.001600 0.005800 0.010050 0.014300 0.018500 0.022800 0.027050
 -0.025800 -0.020500 -0.015250 -0.010000 -0.004750 0.000550 0.005850 0.011100 0.016350 0.021650 0.026900 0.032200 0.037450 0.042750 0.048000
 -0.015900 -0.009600 -0.003350 0.002950 0.009250 0.015550 0.021800 0.028150 0.034400 0.040700 0.047000 0.053300 0.059550 0.065850 0.072150
 -0.007650 0.000200 0.008050 0.015900 0.023700 0.031550 0.039400 0.047250 0.055100 0.062900 0.070800 0.078600 0.086450 0.094300 0.102150
 0.005350 0.014700 0.024100 0.033450 0.042850 0.052200 0.061600 0.070950 0.080350 0.089750 0.099100 0.108500 0.117850 0.127250 0.136600
 -0.011200 -0.000750 0.009700 0.020150 0.030600 0.041050 0.051500 0.062000 0.072450 0.082900 0.093350 0.103850 0.114300 0.124750 0.135200
 -0.001550 0.011000 0.023500 0.036050 0.048550 0.061100 0.073600 0.086150 0.098700 0.111200 0.123700 0.136250 0.148750 0.161300 0.173800
           }
       }
 WMIN=0.36 SMIN=0.36 
 $$ WMIN为min width；SMIN为min spacing
 CRT_VS_SI_WIDTH {
 $$ 上面说过temperature-dependent resistance，两个系数分别为CRT1和CRT2
 $$ CRT1/CRT2基于width查一维表得到
  (0.3900, 3.6490e-03, -8.5347e-07)  (0.4572, 3.6834e-03, -8.5317e-07)  (0.5520, 3.7122e-03, -8.2474e-07)  (0.7000, 3.7416e-03, -8.9018e-07)  (1.0630, 3.7820e-03, -9.4955e-07)  (1.3347, 3.7960e-03, -7.8620e-07)  (4.4036, 3.8055e-03, -4.7080e-07)  (6.5707, 3.8055e-03, -4.7080e-07)
 }
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-conclusion&quot;&gt;3. Conclusion&lt;/h2&gt;
&lt;p&gt;芯片制造过程中的工艺偏差，会导致金属的宽度/厚度/形状发生偏差，继而导致RC的偏差。 &lt;br /&gt;
thickness = origin - f(density,width)  &lt;br /&gt;
width = origin - 2*f(spacing,width) &lt;br /&gt;
resistivity = f(width,thickness)&lt;br /&gt;
R= CRT2*(T-T0)^2 + CRT1*(T-T0) + R0&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="STA" /><category term="process" /><summary type="html">后端设计中，我们需要知道每条net的RC值来计算timing，RC由process直接决定，不同的导体/绝缘体材料、金属宽度/厚度/间距、制造过程中的光刻/刻蚀/抛光等引起的工艺偏差、工作温度等因素都会导致RC变化。 Foundary会考虑制造过程中的种种因素，建立RC模型，来提供给后端；后端根据此模型，抽取计算得到整条net的RC，继而得出net timing。 Foundary提供的process RC有三种格式：itf，TLU+，nxtgrd；三者可以通过Starrc相互转换。</summary></entry><entry><title type="html">understanding SPEF</title><link href="http://localhost:4000/understanding-spef/" rel="alternate" type="text/html" title="understanding SPEF" /><published>2017-11-06T00:00:00+08:00</published><updated>2017-11-06T00:00:00+08:00</updated><id>http://localhost:4000/understanding-spef</id><content type="html" xml:base="http://localhost:4000/understanding-spef/">&lt;p&gt;SPEF(Standard Parasitic Exchange Format)是一种IEEE标准，包含着线上的寄生电阻、电容、电感等信息。SPEF是ASCII格式，可读的。PR后，要抽取spef，在STA工具里反标net上的RC，再配合db里std cell的RC，通过完整的RC才能计算得到准确的timing。&lt;br /&gt;
反标RC过程中，经常会出现warning、error等信息，这时我们就需要debug spef。所以，我们有必要了解SPEF的语法格式。&lt;!-- more --&gt; &lt;br /&gt;
SPEF file通常包括四个部分：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Header section&lt;/li&gt;
  &lt;li&gt;Name map section&lt;/li&gt;
  &lt;li&gt;Ports section&lt;/li&gt;
  &lt;li&gt;Main parasitic description section&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SPEF的keyword以*开头，如：&lt;code class=&quot;highlighter-rouge&quot;&gt;*NAME_MAP&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;*D_NET&lt;/code&gt;;注释以&lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt;开头。&lt;/p&gt;

&lt;h2 id=&quot;1header-section&quot;&gt;1.Header section&lt;/h2&gt;
&lt;p&gt;Header section 一般14行，包含spef version, design name, tool version, naming style, units等。 &lt;br /&gt;
实例：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;*SPEF &quot;IEEE 1481-1999&quot;
*DESIGN &quot;mydesign&quot;
*DATE &quot;Sat Nov  4 17:13:47 2017&quot;
*VENDOR &quot;Synopsys Inc.&quot;
*PROGRAM &quot;StarRC&quot;
*VERSION &quot;M-2017.06-SP2&quot;
*DESIGN_FLOW &quot;PIN_CAP NONE&quot; &quot;NAME_SCOPE LOCAL&quot;
*DIVIDER /
*DELIMITER :
*BUS_DELIMITER []
*T_UNIT 1.0 NS
*C_UNIT 1.0 FF
*R_UNIT 1.0 OHM
*L_UNIT 1.0 HENRY
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2name-map-section&quot;&gt;2.Name map section&lt;/h2&gt;
&lt;p&gt;由于cell/net name会很长，并且同一个net/cell会重复多次出现，为了减小文件大小，会将name映射成数字，在文件后面该数字就表示该name。&lt;br /&gt;
实例：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;*2608468 xtggpio[2]
*2608469 xtggpio[1]
*2608470 xtggpio[0]
*2608471 xtgclk
*2608472 xflash
*2608473 xmshutter
*2608474 xhd
//...
*2621011 u_corei053/u_audtop/U_AUDD_LAI053/u_audgain/u_auddateng0/engaccval_reg_11___engaccval_reg_10___engaccval_reg_9___engaccval_reg_8___engaccval_reg_7___engaccval_reg_6___engaccval_reg_5___engaccval_reg_4_
*2621012 u_corei053/u_audtop/U_AUDD_LAI053/u_audgain/u_auddateng0/engaccval_reg_19___engaccval_reg_18___engaccval_reg_17___engaccval_reg_16___engaccval_reg_15___engaccval_reg_14___engaccval_reg_13___engaccval_reg_12_
*2621013 u_corei053/u_audtop/U_AUDD_LAI053/u_audgain/u_auddateng0/engaccval_reg_27___engaccval_reg_26___engaccval_reg_25___engaccval_reg_24___engaccval_reg_23___engaccval_reg_22___engaccval_reg_21___engaccval_reg_20_
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3ports-session&quot;&gt;3.Ports session&lt;/h2&gt;
&lt;p&gt;Port session包含design所有顶层端口，其格式为：&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;port_name direction&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;port_name&lt;/code&gt;是上面已经name_mapping后的数字格式; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;direction&lt;/code&gt;可以为&lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;O&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt;,分别对应input,output,inout。&lt;br /&gt;
实例：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;*PORTS

*1169423 I
*1169424 I
*1169425 I
*1169426 O
*1169427 O
*1169428 O
*1169429 O
*1169430 O
*2608614 B
*2608615 B
*2608616 B
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4main-parasitic-description-section&quot;&gt;4.Main parasitic description section&lt;/h2&gt;
&lt;p&gt;这个部分就是整个design所有net的寄生RCL信息了，每条net通常以&lt;code class=&quot;highlighter-rouge&quot;&gt;*D_NET&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;*END&lt;/code&gt;关键字分开。&lt;br /&gt;
D_NET表示distributed net，除此外，还有3种很少用：&lt;br /&gt;
R_NET表示reduced nets; &lt;br /&gt;
D_PNET表示distributed physical net;&lt;br /&gt;
R_PNET表示reduced physical nets.&lt;br /&gt;
每条net包含&lt;code class=&quot;highlighter-rouge&quot;&gt;*CONN&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;*CAP&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;*RES&lt;/code&gt;部分，格式如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;*D_NET net_name total_cap
*CONN
//connection information
*CAP
//detailed cap information
*RES
//detailed res information
*END
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;41-connection-section&quot;&gt;4.1 connection section&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*CONN&lt;/code&gt;部分列出该条net所有的pin，此外，还会把该net的内部节点，其格式如下：&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;conn_type pin_name [direction] [driving info] *C xy_coordinate&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;conn_type&lt;/code&gt;有三种：&lt;code class=&quot;highlighter-rouge&quot;&gt;*I&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;*P&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;*N&lt;/code&gt;，分别指：&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;*I&lt;/code&gt;: internal connection，连到logic instant pin，后面跟instant pin name; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;*P&lt;/code&gt;: external connection，连到port，后面跟port name;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;*N&lt;/code&gt;: internal node，工具将net断开的内部节点，后面跟net node。&lt;br /&gt;
conn_type为&lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;P&lt;/code&gt;时，需指定pin/port direction，value可以为&lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;O&lt;/code&gt;，分别指input,output。&lt;br /&gt;
对output pin可以指定其driver cell,格式为&lt;code class=&quot;highlighter-rouge&quot;&gt;*D ref_name&lt;/code&gt;。&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;*C xy_coordinate&lt;/code&gt;表示该pin/port/node的坐标。&lt;br /&gt;
实例：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;*CONN
*I *2614346:I I *C 1109.1300 1841.2300
*I *2614347:ZN O *D INVD2BWP7T40P140HVT *C 1208.3900 1760.8700
*N *4816:2 *C 1109.1300 1841.2300
*N *4816:3 *C 1208.3900 1760.8700
*N *4816:4 *C 1208.3900 1760.8700
*N *4816:5 *C 1208.3400 1760.8800

// 连到port
*CONN
*P *2608554 B *C 82.4600 929.0250
*I *4826447:PAD B *D PRWHSWCDGSD_H *C 82.4600 929.0250
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;42-capacitor-section&quot;&gt;4.2 capacitor section&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*CAP&lt;/code&gt;部分列出该条net的所有cap，包括与GND之间的cap和与相邻net之间的coupled cap，格式分别为： &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;num net_node cap_value&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;num net_node another_net_node coupled_cap_value&lt;/code&gt;  &lt;br /&gt;
实例：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;*CAP
1 *2614346:I *3739625:I 1.89347 //coupled cap
2 *2614346:I *1321176:4 1.07336
3 *4816:5 *1890744:7 0.277137
4 *4816:5 *4216046:D 0.0689194
5 *4816:5 *1891199:15 1.56794
6 *2614346:I *4465732:I 0.425209
7 *2614346:I *2160917:2 0.016052
8 *2614346:I *4469463:B 0.0161593
9 *2614346:I *2160919:3 0.00672438
10 *2614346:I *2161659:3 0.0140435
11 *2614346:I *4470463:A 0.00825583
12 *2614346:I *4474070:B 0.0595718
13 *2614346:I *2166777:7 0.0540128
14 *2614346:I *2169344:2 0.217477
15 *2614346:I *2183021:6 1.00391
16 *2614346:I 5.95695 //to GND
17 *4816:5 9.14826 //to GND
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;43-resistance-section&quot;&gt;4.3 resistance section&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*RES&lt;/code&gt;部分列出该条net上所有金属块的电阻。实例如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;*RES
1 *2614346:I *4816:2 0.001
2 *2614346:I *4816:5 667.144
3 *2614347:ZN *4816:3 6.25715
4 *2614347:ZN *4816:4 0.001
5 *4816:3 *4816:5 0.133914
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Leon Sun</name></author><category term="STA" /><category term="SPEF" /><summary type="html">SPEF(Standard Parasitic Exchange Format)是一种IEEE标准，包含着线上的寄生电阻、电容、电感等信息。SPEF是ASCII格式，可读的。PR后，要抽取spef，在STA工具里反标net上的RC，再配合db里std cell的RC，通过完整的RC才能计算得到准确的timing。 反标RC过程中，经常会出现warning、error等信息，这时我们就需要debug spef。所以，我们有必要了解SPEF的语法格式。</summary></entry><entry><title type="html">NLDM vs. CCS</title><link href="http://localhost:4000/NLDM-VS-CCS/" rel="alternate" type="text/html" title="NLDM vs. CCS" /><published>2017-10-25T00:00:00+08:00</published><updated>2017-10-25T00:00:00+08:00</updated><id>http://localhost:4000/NLDM-VS-CCS</id><content type="html" xml:base="http://localhost:4000/NLDM-VS-CCS/">&lt;p&gt;随着工艺节点下降，一些负面效应在advanced node下越来越明显，这些效应也使传统的NLDM model越来越不精确。Synopsys提出了Composite Current Source(CCS)，CCS是基于电流源模型，集timing/power/noise于一体，精确度更高，与SPICE的误差可以达到±2%。&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-cell-model&quot;&gt;1. cell model&lt;/h2&gt;
&lt;p&gt;集成电路设计是典型的hierarchical design：PMOS/NMOS –&amp;gt; std cell –&amp;gt; design module –&amp;gt; block –&amp;gt; chip。每一次的低层抽象过程，都要抽取出logic和physical信息，以供高层使用。&lt;br /&gt;
physical上的抽象，一般是def/lef/frame等，这些都是对GDS的简化。&lt;br /&gt;
logic上，一般会包括timing、power、noise等信息。&lt;br /&gt;
从最底层的MOS管抽象出std cell，就是cell model过程; 从MOS管提取出的timing、power、noise信息写入lib/db file，供上层做STA/SPA/SNA等分析。90nm以前，一般用NLDM/NLPM/NLNM(Nonlinear Delay/Power/Noise Model)。但是advanced node下，NLDM的精确度差，常用的model有:CCS(synopsys) 和 ECS(cadence)。 &lt;br /&gt;
Block的logic信息也要抽象出来供top使用，常见的抽象block timing模型有：block abstract model(BAM)、extract timing model(ETM)、interface logic models(ILM)等。&lt;/p&gt;

&lt;h2 id=&quot;2-nldm&quot;&gt;2. NLDM&lt;/h2&gt;
&lt;p&gt;Cell model过程是把一个std cell看成block box，只考虑其input/output pin。其input pin对外部是receiver; output pin对外部是driver。Cell model都需要对receiver/driver分别建立模型，得到的模型结果越接近真实值，则精确度更高。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2017-10-25_nldm.png&quot; alt=&quot;NLDM driver/receiver model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;NLDM的driver model是一个内阻恒定的电压源，即输出电压是时间的线性函数，V(t)。这是可以理解的，因为对于driver model，仅考虑stdcell最后一个MOS管，回忆一下，MOS管在导通时要经过多子减少、反型、少子继续积累至饱和，在I-V曲线上就表现为截止区、线性区和饱和区。在线性区上，MOS管电阻可以近似的看成定值(只是近似，其实除了线性关系，还有个二次函数关系,所以电阻其实是逐渐变大的)。这段线性区的过程，在数字集成电路中，就是transition time。所以，NLDM模型认为cell outout pin从0到1过程中，V是线性地从0到VDD。&lt;br /&gt;
NLDM的receiver model是一个恒定的input cap。&lt;br /&gt;
NLDM虽然很简单，但是随着工艺节点下降，金属电阻、寄生电容都越来越大，其精确度也就变差。对于NLDM driver model，当其后面的金属电阻/电容变大时，线性区的电阻是变大的，而且，V越接近VDD，电阻值越大，所以其实driver transition time 变大，cell delay变大。对于NLDM receiver model，在advanced node下，Miller效应影响更明显，单一的input cap也无法正确表征。如下图，可以看出在0.6V前后，曲线曲率明显不同，对应cap值分别为23/31，这无法用单一的input cap表示。&lt;br /&gt;
&lt;img src=&quot;/img/2017-10-25_ccs_input_cap.png&quot; alt=&quot;NLDM input cap&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-ccs&quot;&gt;3. CCS&lt;/h2&gt;
&lt;p&gt;CCS就是为了解决这些偏差而生的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2017-10-25_ccs.png&quot; alt=&quot;CCS driver/receiver model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CCS driver model是一个非线性复合电流源，电流随电压和时间而变化，I(t,V)，可以更精确地处理高电感负载。不仅如此，CCS dirver还能更好地处理非单调波形。 &lt;br /&gt;
CCS receiver model是由两个cap值表示，它们随着transition而变化。C1,C2分别是transition前后半段的cap值。比如input pin的trip points是30%和70%，那么(30%,50%)这段时间的cap值为C1，(50%,70%)这段时间的cap值为C2，STA tool会动态选择cap值。如下图，C1/C2值还是能很好的拟合实际情形。 &lt;br /&gt;
&lt;img src=&quot;/img/2017-10-25_ccs_input_cap.png&quot; alt=&quot;NLDM input cap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外，CCS lib/db里，可以同时含timing/power/noise信息。CCS lib里会看到有ccsn_first_stage/ccsn_last_stage group，分别是最前/后级管子受noise的影响。&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="STA" /><summary type="html">随着工艺节点下降，一些负面效应在advanced node下越来越明显，这些效应也使传统的NLDM model越来越不精确。Synopsys提出了Composite Current Source(CCS)，CCS是基于电流源模型，集timing/power/noise于一体，精确度更高，与SPICE的误差可以达到±2%。</summary></entry><entry><title type="html">Clock Gating Check</title><link href="http://localhost:4000/clock-gating-check/" rel="alternate" type="text/html" title="Clock Gating Check" /><published>2017-10-02T00:00:00+08:00</published><updated>2017-10-02T00:00:00+08:00</updated><id>http://localhost:4000/clock-gating-check</id><content type="html" xml:base="http://localhost:4000/clock-gating-check/">&lt;p&gt;Clock gating check是一种常见的时序检查，当gating signal控制clock signal时，其跳变必须满足时序要求以得到想要的gated clock。最常见的gating check发生在ICG cell上。ICG是常见的low power解决方案，通过在clock tree上插入ICG cell，来减少ICG后面clock buffer/register的不必要跳变，从而起到降低功耗的目的。其实，只要是多输入逻辑cell，只要满足两个条件，都需要做gating check。&lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id=&quot;1clock-gating-check-的必要条件&quot;&gt;1.clock gating check 的必要条件&lt;/h2&gt;
&lt;p&gt;clock gating check必须满足两个条件：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;clock pin上必须是&lt;strong&gt;有效clock signal&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;gating pin上必须是&lt;strong&gt;无效clock signal&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这里的&lt;strong&gt;有效clock signal&lt;/strong&gt;是博主为了方便理解生造出来的。&lt;strong&gt;有效clock signal&lt;/strong&gt;并不是仅仅说这个clock pin上有clock attribute,而且它的fanout必须至少满足以下之一：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;有register的clock pin;&lt;/li&gt;
  &lt;li&gt;有output port;&lt;/li&gt;
  &lt;li&gt;有以clock pin所属clock的generated clock的sink.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;与之对应，gating pin必须是data signal或者不满足上面三个条件的clock signal。 &lt;br /&gt;
只有满足了clock pin和gating pin都满足要求，才会对这个logic cell做gating check。  &lt;br /&gt;
SDC里，我们用&lt;code class=&quot;highlighter-rouge&quot;&gt;set_clock_gating_check&lt;/code&gt;往往不能完全覆盖所有需要gating check的logic cell，这时工具会根据上文的gating check必要条件来推断需要gating check的点。&lt;/p&gt;

&lt;h2 id=&quot;2两种clock-gating-check&quot;&gt;2.两种clock gating check&lt;/h2&gt;
&lt;p&gt;以与门和或门为代表，有两种类型的gating check：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;active-high clock gating check: gating signal为1时，clock signal可以穿过logic cell。比如AND/NAND cell。&lt;/li&gt;
  &lt;li&gt;active-low  clock gating check: gating signal为0时，clock signal可以穿过logic cell。比如OR/NOR cell。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3case-example&quot;&gt;3.case example&lt;/h2&gt;
&lt;p&gt;为了验证clock gating check，需要写一个简单的test module,verilog 如下：&lt;/p&gt;
&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DFQD2BWP7T40P140HVT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reg0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg0out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AN2D2BWP7T40P140HVT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg0out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and1out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AN2D2BWP7T40P140HVT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg0out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and2out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AN2D2BWP7T40P140HVT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg0out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DFQD2BWP7T40P140HVT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reg1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and1out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DFQD2BWP7T40P140HVT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reg2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and2out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;endmodule&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;电路图如下：
&lt;img src=&quot;/img/2017-10-02_1.png&quot; alt=&quot;电路图&quot; /&gt;
在port CLK处定义clock myclk，然后report timing :&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;pt_shell&amp;gt; create_clock -name myclk -period 2 [get_ports CLK]
1
pt_shell&amp;gt; report_timing -to and1/A2 -group **clock_gating_default**
****************************************
Report : timing
        -path_type full
        -delay_type max
        -max_paths 1
        -group **clock_gating_default**
        -sort_by slack
Design : test
Version: I-2013.12
Date   : Fri Oct  6 17:43:59 2017
****************************************

Warning: There is 1 invalid end point for constrained paths. (UITE-416)
Warning: There is 1 invalid end point for unconstrained paths. (UITE-416)
No Paths.

1
pt_shell&amp;gt; report_timing -to and2/A2 -group **clock_gating_default**
****************************************
Report : timing
        -path_type full
        -delay_type max
        -max_paths 1
        -group **clock_gating_default**
        -sort_by slack
Design : test
Version: I-2013.12
Date   : Fri Oct  6 17:43:15 2017
****************************************


  Startpoint: reg0 (rising edge-triggered flip-flop clocked by myclk)
  Endpoint: and2 (rising clock gating-check end-point clocked by myclk)
  Path Group: **clock_gating_default**
  Path Type: max

  Point                                    Incr       Path
  ---------------------------------------------------------------
  clock myclk (rise edge)                  0.00       0.00
  clock network delay (ideal)              0.00       0.00
  reg0/CP (DFQD2BWP7T40P140HVT)            0.00       0.00 r
  reg0/Q (DFQD2BWP7T40P140HVT)             0.13       0.13 f
  and2/A2 (AN2D2BWP7T40P140HVT)            0.00       0.13 f
  data arrival time                                   0.13

  clock myclk (rise edge)                  2.00       2.00
  clock network delay (ideal)              0.00       2.00
  clock reconvergence pessimism            0.00       2.00
  and2/A1 (AN2D2BWP7T40P140HVT)                       2.00 r
  clock gating setup time                  0.00       2.00
  data required time                                  2.00
  ---------------------------------------------------------------
  data required time                                  2.00
  data arrival time                                  -0.13
  ---------------------------------------------------------------
  slack (MET)                                         1.87


1
pt_shell&amp;gt; report_timing -to and3/A2 -group **clock_gating_default**
****************************************
Report : timing
        -path_type full
        -delay_type max
        -max_paths 1
        -group **clock_gating_default**
        -sort_by slack
Design : test
Version: I-2013.12
Date   : Fri Oct  6 17:43:32 2017
****************************************

  Point                                    Incr       Path
  ---------------------------------------------------------------
  clock myclk (rise edge)                  0.00       0.00
  clock network delay (ideal)              0.00       0.00
  reg0/CP (DFQD2BWP7T40P140HVT)            0.00       0.00 r
  reg0/Q (DFQD2BWP7T40P140HVT)             0.13       0.13 f
  and3/A2 (AN2D2BWP7T40P140HVT)            0.00       0.13 f
  data arrival time                                   0.13

  clock myclk (rise edge)                  2.00       2.00
  clock network delay (ideal)              0.00       2.00
  clock reconvergence pessimism            0.00       2.00
  and3/A1 (AN2D2BWP7T40P140HVT)                       2.00 r
  clock gating setup time                  0.00       2.00
  data required time                                  2.00
  ---------------------------------------------------------------
  data required time                                  2.00
  data arrival time                                  -0.13
  ---------------------------------------------------------------
  slack (MET)                                         1.87


1
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;对于这三个与门,都是A1 pin为clock pin, A2 pin位gating pin。&lt;br /&gt;
and2/A1的fanout有reg2/CP，为myclk的sink，所以and2/A1是&lt;strong&gt;有效clock signal&lt;/strong&gt;, and1需要clock gating check;&lt;br /&gt;
and3/A1的fanout有output port OUT，所以and3/A1也是&lt;strong&gt;有效clock singal&lt;/strong&gt;, and3需要clock gating check; &lt;br /&gt;
and1/A1的fanout既没有clock sink，也没有output port，所以and1不需要clock gating check. &lt;br /&gt;
如果在and2后面定义clock呢？&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;pt_shell&amp;gt; create_clock -name myclk2 -period 2 and2/Z
Warning: Creating a clock on internal pin 'and2/Z'. (UITE-130)
1
pt_shell&amp;gt; report_timing -to and2/A2 -group **clock_gating_default**
Warning: No clock-gating check was inferred for clock myclk at pins and2/A2 and and2/A1 of cell and2 because no clock pins could be found in the fanout for the propagating clock. (PTE-101)
Information: Abandoning fast timing updates. (PTE-018)
Information: Inferring 1 clock-gating checks. (PTE-017)
****************************************
Report : timing
        -path_type full
        -delay_type max
        -max_paths 1
        -group **clock_gating_default**
        -sort_by slack
Design : test
Version: I-2013.12
Date   : Fri Oct  6 18:12:49 2017
****************************************

Warning: There is 1 invalid end point for constrained paths. (UITE-416)
Warning: There is 1 invalid end point for unconstrained paths. (UITE-416)

  Startpoint: reg0 (rising edge-triggered flip-flop clocked by myclk)
  Endpoint: and2/Z (internal pin)
  Path Group: (none)
  Path Type: max

  Point                                    Incr       Path
  ---------------------------------------------------------------
  reg0/CP (DFQD2BWP7T40P140HVT)            0.00       0.00 r
  reg0/Q (DFQD2BWP7T40P140HVT)             0.11       0.11 r
  and2/A2 (AN2D2BWP7T40P140HVT) &amp;lt;-         0.00       0.11 r
  and2/Z (AN2D2BWP7T40P140HVT)             0.05       0.17 r
  data arrival time                                   0.17
  ---------------------------------------------------------------
  (Path is unconstrained)


1
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and2/A1有myclk，但是后面fanout没有myclk的sink。所以没有clock gating check。
再试一下在and2/Z定义myclk的generated clock。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
pt_shell&amp;gt; create_generated_clock -name myclk_gen1 -source CLK -divide_by 1 and2/Z
Information: Abandoning fast timing updates. (PTE-018)
1
pt_shell&amp;gt; report_timing -to and2/A2 -group **clock_gating_default**
Information: Inferring 2 clock-gating checks. (PTE-017)
Information: Using automatic max wire load selection group 'WireAreaForZero'. (ENV-003)
Information: Using automatic min wire load selection group 'WireAreaForZero'. (ENV-003)
****************************************
Report : timing
        -path_type full
        -delay_type max
        -max_paths 1
        -group **clock_gating_default**
        -sort_by slack
Design : test
Version: I-2013.12
Date   : Fri Oct  6 18:17:01 2017
****************************************


  Startpoint: reg0 (rising edge-triggered flip-flop clocked by myclk)
  Endpoint: and2 (rising clock gating-check end-point clocked by myclk)
  Path Group: **clock_gating_default**
  Path Type: max

  Point                                    Incr       Path
  ---------------------------------------------------------------
  clock myclk (rise edge)                  0.00       0.00
  clock network delay (ideal)              0.00       0.00
  reg0/CP (DFQD2BWP7T40P140HVT)            0.00       0.00 r
  reg0/Q (DFQD2BWP7T40P140HVT)             0.13       0.13 f
  and2/A2 (AN2D2BWP7T40P140HVT)            0.00       0.13 f
  data arrival time                                   0.13

  clock myclk (rise edge)                  2.00       2.00
  clock network delay (ideal)              0.00       2.00
  clock reconvergence pessimism            0.00       2.00
  and2/A1 (AN2D2BWP7T40P140HVT)                       2.00 r
  clock gating setup time                  0.00       2.00
  data required time                                  2.00
  ---------------------------------------------------------------
  data required time                                  2.00
  data arrival time                                  -0.13
  ---------------------------------------------------------------
  slack (MET)                                         1.87


1
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;果然and2是有clock gating check，因为and2/A1满足&lt;strong&gt;有效clock signal&lt;/strong&gt;的第三个条件。&lt;/p&gt;

&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;
&lt;p&gt;虽然PT会infer clock gating check，但是我们还是要理解其原因。只要记住clock gating check的两个必要条件，我们就能很容易的分辨出是否需要clock gating check了。&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="STA" /><summary type="html">Clock gating check是一种常见的时序检查，当gating signal控制clock signal时，其跳变必须满足时序要求以得到想要的gated clock。最常见的gating check发生在ICG cell上。ICG是常见的low power解决方案，通过在clock tree上插入ICG cell，来减少ICG后面clock buffer/register的不必要跳变，从而起到降低功耗的目的。其实，只要是多输入逻辑cell，只要满足两个条件，都需要做gating check。</summary></entry><entry><title type="html">hard verification by bad RLT coding style</title><link href="http://localhost:4000/inconclusive-verification-by-bad-rtl-coding-style/" rel="alternate" type="text/html" title="hard verification by bad RLT coding style" /><published>2017-09-15T00:00:00+08:00</published><updated>2017-09-15T00:00:00+08:00</updated><id>http://localhost:4000/inconclusive-verification-by-bad-rtl-coding-style</id><content type="html" xml:base="http://localhost:4000/inconclusive-verification-by-bad-rtl-coding-style/">&lt;p&gt;最近项目中碰到一个hard verification，有11个点inconclusive，属于同一个module下。由于RTL是加密的，无法获知这个module的内容，这也给debug带来了一定麻烦。
&lt;!--more--&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;**************************************************
Report         : aborted_points

Reference      : r:/WORK/**
Implementation : i:/WORK/**
Version        : L-2016.03-SP5
Date           : Sat Sep  2 15:44:52 2017
**************************************************

11 Aborted compare points:
       0 Loop  (driven by a potentially state-holding asynchronous loop)
      11 Hard  (too complex to solve)

 Hard :  Ref  DFF        r:/WORK/**/**/**/**/bar1avg4_3d_reg_10_
         Impl DFF        i:/WORK/**/**/**/**/bar1avg4_3d_reg_10_

 Hard :  Ref  DFF        r:/WORK/**/**/**/**/bar1avg4_3d_reg_11_
         Impl DFF        i:/WORK/**/**/**/**/bar1avg4_3d_reg_11_

 Hard :  Ref  DFF        r:/WORK/**/**/**/**/bar1avg4_3d_reg_8_
         Impl DFF        i:/WORK/**/**/**/**/bar1avg4_3d_reg_8_

 Hard :  Ref  DFF        r:/WORK/**/**/**/**/bar1avg4_3d_reg_9_
         Impl DFF        i:/WORK/**/**/**/**/bar1avg4_3d_reg_9_

 Hard :  Ref  DFF        r:/WORK/**/**/**/**/foosum_3d_reg_16___foosum_3d_reg_15___foosum_3d_reg_14___foosum_3d_reg_13___foosum_3d_reg_12___foosum_3d_reg_11___foosum_3d_reg_10___foosum_3d_reg_9_/\*dff.00.0\*
         Impl DFF        i:/WORK/**/**/**/**/foosum_3d_reg_16___foosum_3d_reg_15___foosum_3d_reg_14___foosum_3d_reg_13___foosum_3d_reg_12___foosum_3d_reg_11___foosum_3d_reg_10___foosum_3d_reg_9_/\*dff.00.0\*

 Hard :  Ref  DFF        r:/WORK/**/**/**/**/foosum_3d_reg_16___foosum_3d_reg_15___foosum_3d_reg_14___foosum_3d_reg_13___foosum_3d_reg_12___foosum_3d_reg_11___foosum_3d_reg_10___foosum_3d_reg_9_/\*dff.00.1\*
         Impl DFF        i:/WORK/**/**/**/**/foosum_3d_reg_16___foosum_3d_reg_15___foosum_3d_reg_14___foosum_3d_reg_13___foosum_3d_reg_12___foosum_3d_reg_11___foosum_3d_reg_10___foosum_3d_reg_9_/\*dff.00.1\*
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;debug&quot;&gt;Debug&lt;/h2&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;analyze_points&lt;/code&gt;发现都是同一个datapath 被rejected, formality 也给出了建议。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;fm_shell (verify)&amp;gt; analyze_points r:/WORK/**/**/**/**/bar1avg4_3d_reg_10_ 
Found 1 Rejected Datapath Guidance Module
--------------------------------
These modules contain cells that may be related to
rejected datapath guidance.
--------------------------------
r:/WORK/**_tdedgdet_M_AVG0_M_TYPE0_0 in file ***/**/**/**.v.e
    Module with rejected datapath guidance on cell(s):
        r:/WORK/**_tdedgdet_M_AVG0_M_TYPE0_0/DP_OP_1054J26_124_1439
     Use 'report_svf_operation { 67437 }' for more information.
     Try adding the following command(s) to your Design Compiler script right before the first compile_ultra command:
          current_design **
          set_verification_priority [ get_cells { **/**/**/add_134952 **/**/**/add_134952_2 **/**/**/add_134952_3 **/**/**/add_134952_4 **/**/**/add_134953 **/**/**/add_134953_2 **/**/**/add_134953_3 **/**/**/add_134953_4 **/**/**/add_134954 **/**/**/add_134954_2 **/**/**/add_134954_3 **/**/**/add_134954_4 **/**/**/add_134955 **/**/**/add_134955_2 **/**/**/add_134955_3 **/**/**/add_134955_4 **/**/**/add_134956 **/**/**/add_134956_10 **/**/**/add_134956_11 **/**/**/add_134956_12 **/**/**/add_134956_13 **/**/**/add_134956_14 **/**/**/add_134956_15 **/**/**/add_134956_2 **/**/**/add_134956_3 **/**/**/add_134956_4 **/**/**/add_134956_5 **/**/**/add_134956_6 **/**/**/add_134956_7 **/**/**/add_134956_8 **/**/**/add_134956_9 **/**/**/add_134961 **/**/**/add_134961_10 **/**/**/add_134961_11 **/**/**/add_134961_12 **/**/**/add_134961_13 **/**/**/add_134961_14 **/**/**/add_134961_15 **/**/**/add_134961_16 **/**/**/add_134961_17 **/**/**/add_134961_18 **/**/**/add_134961_19 **/**/**/add_134961_2 **/**/**/add_134961_20 **/**/**/add_134961_21 **/**/**/add_134961_22 **/**/**/add_134961_23 **/**/**/add_134961_24 **/**/**/add_134961_3 **/**/**/add_134961_4 **/**/**/add_134961_5 **/**/**/add_134961_6 **/**/**/add_134961_7 **/**/**/add_134961_8 **/**/**/add_134961_9 } ]
          
          current_design **

-----------
--------------------------------
****************************************************************************************
Analysis Completed

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;看看SVF里的67437 operation是什么：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
fm_shell (verify)&amp;gt; report_svf_operation { 67437 }
**************************************************
Report         : svf_operation
                 67437 

Reference      : r:/WORK/**
Implementation : i:/WORK/**
Version        : L-2016.03-SP5
Date           : Thu Aug 31 18:27:18 2017
**************************************************

## SVF Operation 67437 (Line: 1926568) - datapath.  Status: rejected
## Operation Id: 67437
guide_datapath \
  -design { **_tdedgdet_M_AVG0_M_TYPE0_0 } \
  -datapath { DP_OP_1054J26_124_1439 } \
  -body { **_tdedgdet_M_AVG0_M_TYPE0_0_DP_OP_1054J26_124_1439_J26_0 } 

Info:  guide_datapath 67437 (Line: 1926568)  Pre-verification of r:/WORK/**_tdedgdet_M_AVG0_M_TYPE0_0/DP_OP_1054J26_124_1439 INCONCLUSIVE.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;好像并不能看出太多内容。但是我们可以从formality给的建议里看出，这些cell都是adder。需要注意的是，formality指出的cell name 是在第一次&lt;code class=&quot;highlighter-rouge&quot;&gt;compile_ultra&lt;/code&gt;之前的，也就是说，这些cell name是从RTL转成GTECH网表时的名称。在综合后，这些&lt;code class=&quot;highlighter-rouge&quot;&gt;add_*&lt;/code&gt;module（+操作符）会被打平。&lt;br /&gt;
根据formality提示，在&lt;code class=&quot;highlighter-rouge&quot;&gt;compile_ultra&lt;/code&gt;前加上&lt;code class=&quot;highlighter-rouge&quot;&gt;set_verification_priority&lt;/code&gt;后，这些adder就不会被ungroup，也就不会被打平优化，这样就导致了通过该datapath的timing很差，达到-700ps左右。但是，好处也很明显，通过这样综合的网表，是可以pass formal的。&lt;br /&gt;
DC的DesignWare里有多种adder architecture，综合时，DC会根据design约束自动选择合适的adder&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。当约束不紧时，DC会选择面积小的逐步进位加法器；当约束紧时，DC会选择更快的加法器，比如优化后的超前进位加法器等。我尝试了对u_tdedgdet不给timing constraint，直接compile，得到的网表可以pass formal；又通过&lt;code class=&quot;highlighter-rouge&quot;&gt;characterize&lt;/code&gt;把top constraint约束到u_tdedgdet，综合后，得到的网表为inconclusive。从这里也可以看出，DC对adder的选择和优化过狠，导致hard verification。&lt;br /&gt;
既然加了&lt;code class=&quot;highlighter-rouge&quot;&gt;set_verification_priority&lt;/code&gt;后的网表时序太差，那么能否通过incremental compile来优化timing？&lt;br /&gt;
首先，DC在使用&lt;code class=&quot;highlighter-rouge&quot;&gt;set_verification_priority&lt;/code&gt;时，是将design/cell 的&lt;code class=&quot;highlighter-rouge&quot;&gt;verification_priority&lt;/code&gt; attribute 设为&lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt;,而不是&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;，这一点需要注意。&lt;br /&gt;
另外，我发现DC好像无法remove掉该attribute。如下，我明明已经用&lt;code class=&quot;highlighter-rouge&quot;&gt;remove_attribute&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;remove_verification_priority&lt;/code&gt;去掉了，而且&lt;code class=&quot;highlighter-rouge&quot;&gt;get_attribute&lt;/code&gt;也显示没有该属性，但是在ungroup、compile的时候还是会有log显示有该属性。这一点真的是比较奇怪，个人觉得应该是DC的一个bug。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
dc_shell&amp;gt; get_cells -filter &quot;verification_priority==default&quot; -hierarchical
{**/**/**/add_x_91 **/**/**/add_x_90 **/**/**/add_x_89 **/**/**/add_x_87 **/**/**/add_x_86 **/**/**/add_x_85 **/**/**/add_x_84 **/**/**/add_x_83 **/**/**/add_x_82 ... }

dc_shell&amp;gt; remove_attribute  [get_cells **/**/**/add_x_*] verification_priority
**/**/**/add_x_91 **/**/**/add_x_90 **/**/**/add_x_89 **/**/**/add_x_87 **/**/**/add_x_86 **/**/**/add_x_85 **/**/**/add_x_84 **/**/**/add_x_83 **/**/**/add_x_82 ...
dc_shell&amp;gt; ungroup [get_cells **/**/**/add_x_*]
Information: '**/**/**/add_x_91' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_90' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_89' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_87' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_86' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_85' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_84' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_83' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_82' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_81' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
...

dc_shell&amp;gt; remove_verification_priority -all
1
dc_shell&amp;gt; ungroup [get_cells **/**/**/add_x_*]
Information: '**/**/**/add_x_91' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_90' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_89' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_87' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_86' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_85' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_84' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_83' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_82' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
Information: '**/**/**/add_x_81' will not be ungrouped because of the verification_priority attribute set on it. (OPT-774)
...

dc_shell&amp;gt; get_attribute **/**/**/add_x_91 verification_priority
Warning: Attribute 'verification_priority' does not exist on cell '**/**/**/add_x_91'. (UID-101)

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Anyway，既然不能ungroup，那我就尝试&lt;code class=&quot;highlighter-rouge&quot;&gt;group_path&lt;/code&gt;,把through这些adder的path都拿出来设一个group，优化后发现还是修不下去…这么看来，好像使用&lt;code class=&quot;highlighter-rouge&quot;&gt;verification_priority&lt;/code&gt;这条路进入了死胡同… &lt;br /&gt;
我又试了各种alternative strategy，也仅仅把hard verification points从11个减小到10个… &lt;br /&gt;
换更新的DC/FM版本试试，还是没效果…实在是崩溃… &lt;br /&gt;
最后，向前端要了解密的该module的RTL，结果发现该module里居然12位reg累加了20次，20次！！&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
reg     [11:0]  foo00_2d, foo01_2d, foo02_2d, foo03_2d, foo04_2d;
reg     [11:0]  foo10_2d, foo11_2d, foo12_2d, foo13_2d, foo14_2d;
reg     [11:0]  foo20_2d, foo21_2d, foo22_2d, foo23_2d, foo24_2d;
reg     [11:0]  foo30_2d, foo31_2d, foo32_2d, foo33_2d, foo34_2d;
reg     [11:0]  foo40_2d, foo41_2d, foo42_2d, foo43_2d, foo44_2d;
//省略部分...
wire    [15:0]  barsum_2d   =	foo00_2d + foo01_2d + foo02_2d + foo03_2d + foo04_2d +
                                foo10_2d +                                + foo14_2d +
                                foo20_2d +                                + foo24_2d +
                                foo30_2d +                                + foo34_2d +
                                foo40_2d + foo41_2d + foo42_2d + foo43_2d + foo44_2d ;
wire    [16:0]  foosum_2d   =	foo00_2d + foo01_2d + foo02_2d + foo03_2d + foo04_2d +
                                foo10_2d + foo11_2d + foo12_2d + foo13_2d + foo14_2d +
                                foo20_2d + foo21_2d + foo22_2d + foo23_2d + foo24_2d +
                                foo30_2d + foo31_2d + foo32_2d + foo33_2d + foo34_2d +
                                foo40_2d + foo41_2d + foo42_2d + foo43_2d + foo44_2d ;
//省略部分...
reg     [14:0]  bar_3d;
reg     [11:0]  bar1avg4_3d;
reg     [16:0]    foosum_3d;
always@(posedge clk)
  if (en&amp;amp;dvd)
  begin
    bar1avg4_3d &amp;lt;= barsum_2d[15:4];
      foosum_3d &amp;lt;=   foosum_2d ;
  end
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以发现，上面这段verilog，由于12位reg多次累加，导致了sum的高位无法pass。而且明显foosum_2d可以复用barsum_2d的逻辑，这部分逻辑是可以优化的。这里复杂的RTL累加，是此次hard verification的罪魁祸首。所以说，good RTL coding style是很重要的，涉及datapath的尤其要注意。SolvNet的&lt;a href=&quot;https://solvnet.synopsys.com/retrieve/015771.html&quot;&gt;Coding Guidelines for Datapath Synthesis&lt;/a&gt;可以好好阅读一下。&lt;br /&gt;
(PS: 文中涉及design相关已做隐藏**)&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://solvnet.synopsys.com/retrieve/018499.html&quot;&gt;DesignWare Adder &amp;amp; Multiplier Characterization&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Leon Sun</name></author><category term="verification" /><category term="RTL" /><category term="formality" /><summary type="html">最近项目中碰到一个hard verification，有11个点inconclusive，属于同一个module下。由于RTL是加密的，无法获知这个module的内容，这也给debug带来了一定麻烦。</summary></entry><entry><title type="html">Control NDM unexpected pin shapes</title><link href="http://localhost:4000/control-ndm-unexpected-pin-shapes/" rel="alternate" type="text/html" title="Control NDM unexpected pin shapes" /><published>2017-08-31T00:00:00+08:00</published><updated>2017-08-31T00:00:00+08:00</updated><id>http://localhost:4000/control-ndm-unexpected-pin-shapes</id><content type="html" xml:base="http://localhost:4000/control-ndm-unexpected-pin-shapes/">&lt;p&gt;从ICC2开始, synopsys 为了提高PR工具的速度，引入了一种新格式的库，即NDM(new data model)。NDM 其实就是将logic info 和 physical info合成到一起，NDM有4种view:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;layout view&lt;/li&gt;
  &lt;li&gt;design view&lt;/li&gt;
  &lt;li&gt;frame view&lt;/li&gt;
  &lt;li&gt;timing view&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用ICC2 library manger 生成NDM时，physical lib 是必须的，可以为lef、gds、oasis、ICC frame，常用的是lef/gds。使用lef时，比较方便，因为lef里含有design info，如site name，cell type，pin direction 等信息（site name有时会需要转成与tech lef一致，&lt;code class=&quot;highlighter-rouge&quot;&gt;read_lef -convert_sites&lt;/code&gt;）；而使用gds/oasis时，就比较麻烦，这是因为，gds里只有一层层的metal，site name/cell type 这些信息需要用户根据实际指定（marco,pad,corner,filler,cover…), pin name可以从通过trace text得到，而pin direction 则必须从timing lib得到。
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;碰到的问题是，使用gds作为physical source来产生NDM时，会将每个via cut shape当做termial。&lt;br /&gt;
gds 局部图如下，text 在每层metal上，每层metal之间有width 0.05um spacing 0.08um 的via。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2017-08-31_gds.png&quot; alt=&quot;gds局部图&quot; width=&quot;70%&quot; /&gt; &lt;br /&gt;
extract frame时设了&lt;code class=&quot;highlighter-rouge&quot;&gt;lib.physical_model.merge_metal_blockage&lt;/code&gt;为true，根据man page，当两块metal之间距离小于spacing threshold (2&lt;em&gt;min_spacing-min_width)时会被merge，查看techfile，该层min witdh和min spacing分别为0.05和0.08，那么threshold应该为2&lt;/em&gt;0.08-0.05=0.11。而这些via之间间距为0.08，却没有被merge。
这会有什么影响呢？PR时，ICC2里会报如下warning:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;Warning: Cell **** port DVSS09 contains more than 1000000 pins (Number of pins: 1062350).  This may increase routing runtime. (ZRT-565)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这个warning的意思应该是含有太多的pin shape，或者说这个port 有太多的terminal。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;icc2_shell&amp;gt; sizeof_collection [get_shapes -of [get_ports DVSS09*]]
1059159
icc2_shell&amp;gt; sizeof_collection [get_terminals DVSS09*]
1059159
icc2_shell&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;该warning的manpage如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
ZRT-565  
  
NAME  
  
ZRT-565 (warning) Cell %s port %s contains more than %d pins (Number of pins: %d). This may increase routing runtime.  
  
DESCRIPTION  
  
A port contains a large number of pins. This is atypical and may increase routing runtime.  
  
WHAT NEXT  
  
If this is not expected, please reduce the number of pins for the port.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;1.&lt;code class=&quot;highlighter-rouge&quot;&gt;read_gds -trace_option&lt;/code&gt;：尝试改变gds trace option，&lt;code class=&quot;highlighter-rouge&quot;&gt;pins_only&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;same_layer&lt;/code&gt;都没有效果；&lt;br /&gt;
2.&lt;code class=&quot;highlighter-rouge&quot;&gt;read_gds -trace_connectivity_limit&lt;/code&gt;: 尝试设trace limit 为1，仍然没有效果；&lt;br /&gt;
3.&lt;code class=&quot;highlighter-rouge&quot;&gt;file.gds.create_custom_via&lt;/code&gt;:尝试把那些via cut shape当做一整个via，这个变量设为true，runtime大大增加，未等待到结果；&lt;br /&gt;
4.&lt;code class=&quot;highlighter-rouge&quot;&gt;file.gds.exclude_layers&lt;/code&gt;: 直接把gds里的via layer都exclude。  &lt;br /&gt;
在&lt;code class=&quot;highlighter-rouge&quot;&gt;read_gds&lt;/code&gt;前，&lt;code class=&quot;highlighter-rouge&quot;&gt;set_app_options -name file.gds.exclude_layers -value { {VIA1 VIA1} {VIA2 VIA2} {VIA3 VIA3} {VIA4 VIA4} {VIA5 VIA5} {VIA6 VIA6} {VIA7 VIA7} }&lt;/code&gt;，让lm忽略所有via layer，果然生成的NDM里没有了那些pin shape。这些via的enclosure没有超出upper/lower metal，所有去掉这些via在route时应该不会引起额外的drc。&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;使用GDS作为physical source生成NDM时，design info需要tool自己trace，这个过程有许多变量来控制，要根据实际需要调整这些变量来得到合理的NDM。&lt;/p&gt;</content><author><name>Leon Sun</name></author><category term="PR" /><category term="icc2_lm" /><category term="ndm" /><summary type="html">从ICC2开始, synopsys 为了提高PR工具的速度，引入了一种新格式的库，即NDM(new data model)。NDM 其实就是将logic info 和 physical info合成到一起，NDM有4种view: layout view design view frame view timing view 使用ICC2 library manger 生成NDM时，physical lib 是必须的，可以为lef、gds、oasis、ICC frame，常用的是lef/gds。使用lef时，比较方便，因为lef里含有design info，如site name，cell type，pin direction 等信息（site name有时会需要转成与tech lef一致，read_lef -convert_sites）；而使用gds/oasis时，就比较麻烦，这是因为，gds里只有一层层的metal，site name/cell type 这些信息需要用户根据实际指定（marco,pad,corner,filler,cover…), pin name可以从通过trace text得到，而pin direction 则必须从timing lib得到。</summary></entry></feed>